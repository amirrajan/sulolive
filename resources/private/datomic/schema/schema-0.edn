[

 ;; User
 {:db/id                 #db/id[:db.part/db]
  :db/ident              :user/email
  :db/valueType          :db.type/string
  :db/cardinality        :db.cardinality/one
  :db/doc                "User email."
  :db.install/_attribute :db.part/db}

 {:db/id                 #db/id[:db.part/db]
  :db/ident              :user/verified
  :db/valueType          :db.type/boolean
  :db/cardinality        :db.cardinality/one
  :db/doc                "User has verified their email."
  :db.install/_attribute :db.part/db}


 ;; Photo
 {:db/id                 #db/id[:db.part/db]
  :db/ident              :photo/path
  :db/valueType          :db.type/string
  :db/cardinality        :db.cardinality/one
  :db/doc                "Photo URL"
  :db.install/_attribute :db.part/db}

;; Stream

 {:db/id                 #db/id[:db.part/db]
  :db/ident              :stream/name
  :db/valueType          :db.type/string
  :db/cardinality        :db.cardinality/one
  :db/doc                "Name of the stream"
  :db.install/_attribute :db.part/db}

 {:db/id                 #db/id[:db.part/db]
  :db/ident              :stream/store
  :db/valueType          :db.type/ref
  :db/cardinality        :db.cardinality/one
  :db/doc                "Ref to the streams store"
  :db.install/_attribute :db.part/db}

 ;{:db/id                 #db/id[:db.part/db]
 ; :db/ident              :stream/photo
 ; :db/valueType          :db.type/string
 ; :db/cardinality        :db.cardinality/one
 ; :db/doc                "Tumbnail of the stream"
 ; :db.install/_attribute :db.part/db}

 ;; Store
 ;; TODO: Think about adding a :store/uuid ?

 {:db/id                 #db/id[:db.part/db]
  :db/ident              :store/name
  :db/valueType          :db.type/string
  :db/cardinality        :db.cardinality/one
  :db/doc                "Name of a store"
  :db.install/_attribute :db.part/db}

 {:db/id                 #db/id[:db.part/db]
  :db/ident              :store/photo
  :db/valueType          :db.type/ref
  :db/cardinality        :db.cardinality/one
  :db/doc                "Profile photo of the store"
  :db.install/_attribute :db.part/db}

 {:db/id                 #db/id[:db.part/db]
  :db/ident              :store/cover
  :db/valueType          :db.type/ref
  :db/cardinality        :db.cardinality/one
  :db/doc                "Cover photo for the store"
  :db.install/_attribute :db.part/db}

 ;; Goods aka Items

 {:db/id                 #db/id[:db.part/db]
  :db/ident              :item/name
  :db/valueType          :db.type/string
  :db/cardinality        :db.cardinality/one
  :db/fulltext           true
  :db/doc                "Name of the item"
  :db.install/_attribute :db.part/db}

 {:db/id                 #db/id[:db.part/db]
  :db/ident              :item/store
  :db/valueType          :db.type/ref
  :db/cardinality        :db.cardinality/one
  :db/doc                "Ref which has the item"
  :db.install/_attribute :db.part/db}

 {:db/id                 #db/id[:db.part/db]
  :db/ident              :item/price
  :db/valueType          :db.type/bigdec
  :db/cardinality        :db.cardinality/one
  :db/doc                "Price of the item"
  :db.install/_attribute :db.part/db}

 {:db/id                 #db/id[:db.part/db]
  :db/ident              :item/category
  :db/valueType          :db.type/string
  :db/cardinality        :db.cardinality/one
  :db/doc                "Category of the item"
  :db.install/_attribute :db.part/db}

 ;; TODO: Add currency?

 {:db/id                 #db/id[:db.part/db]
  :db/ident              :item/photos
  :db/valueType          :db.type/ref
  :db/cardinality        :db.cardinality/many
  :db/doc                "Item photos"
  :db.install/_attribute :db.part/db}

 ;; Cart

 {:db/id                 #db/id[:db.part/db]
  :db/ident              :cart/items
  :db/valueType          :db.type/ref
  :db/cardinality        :db.cardinality/many
  :db/doc                "Items in the cart"
  :db.install/_attribute :db.part/db}

 ;; TODO: Add :cart/user, or something when we have a user.

 ]
